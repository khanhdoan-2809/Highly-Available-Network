AWSTemplateFormatVersion: "2010-09-09"

Description: High Avaibility Bank ASG

Resources:
#VPC
  BankVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.10.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: "Name"
          Value: "Bank VPC"

#Security Group
  BankSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP & SSH access
      VpcId: !Ref BankVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
      - Key: "Name"
        Value: "Bank Security Group"

# Internet Gateway
  BankInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: "Name"
          Value: "Bank Internet Gateway"


# Attach IGW to VPC
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref BankVPC
      InternetGatewayId: !Ref BankInternetGateway

#Subnet 1
  Subnet1:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId: !Ref BankVPC
        CidrBlock: 10.10.1.0/24
        AvailabilityZone: "ap-southeast-1a"
        MapPublicIpOnLaunch: yes
        Tags:
        - Key: "Name"
          Value: "Bank Subnet 1"


#Subnet 2
  Subnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref BankVPC
      CidrBlock: 10.10.2.0/24
      AvailabilityZone: "ap-southeast-1b"
      MapPublicIpOnLaunch: yes
      Tags:
      - Key: "Name"
        Value: "Bank Subnet 2"
    
# Subnet 3
  Subnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref BankVPC
      CidrBlock: 10.10.3.0/24
      AvailabilityZone: "ap-southeast-1c"
      MapPublicIpOnLaunch: yes
      Tags:
      - Key: "Name"
        Value: "Bank Subnet 3"

# Public Route Table
  BankRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref BankVPC
      Tags:
      - Key: "Name"
        Value: "Bank Public Route Table"

  Route:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId: !Ref BankRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId: !Ref BankInternetGateway

  # Route association for Subnet 1
  Subnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet1
      RouteTableId: !Ref BankRouteTable
        
# Route association for Subnet 2
  Subnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet2
      RouteTableId: !Ref BankRouteTable

# Route association for Subnet 3
  Subnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet3
      RouteTableId: !Ref BankRouteTable

# EC2
  BankLaunchTemplate: 
    Type: 'AWS::EC2::LaunchTemplate'
    Properties: 
      LaunchTemplateName: BankLaunchTemplate
      LaunchTemplateData:
        InstanceType: t2.micro
        ImageId: ami-0f403e3180720dd7e
        SecurityGroupIds: 
          - !Ref BankSG
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            yum update -y
            yum install httpd -y
            systemctl start httpd
            systemctl enable httpd
            amazon-linux-extras install epel -y
            yum install stress -y
            echo "<h1>Welcome To Level Up Bank </h1>" > /var/www/html/index.html

# Auto Scaling Group
  BankASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref BankLaunchTemplate
        Version: !GetAtt BankLaunchTemplate.LatestVersionNumber
      MaxSize: '5'
      MinSize: '2'
      VPCZoneIdentifier:   
        - !Ref Subnet1
        - !Ref Subnet2
        - !Ref Subnet3
      TargetGroupARNs:
        - !Ref BankALBTargetGroup
      Tags:
      - Key: "Name"
        Value: "Bank Auto Scaling Group"

# Scaling Policy
  BankScalingPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref BankASG
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: '50'

  # Application Load Balancer
  BankApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: "BankALB"
      SecurityGroups: 
        - !Ref BankSG
      Subnets: 
        - !Ref Subnet1
        - !Ref Subnet2
        - !Ref Subnet3
      Tags:
      - Key: "Name"
        Value: "Bank Application Load Balancer"

  # ALB Target Group
  BankALBTargetGroup : 
    Type : 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties : 
      HealthCheckIntervalSeconds : '30'
      HealthCheckTimeoutSeconds : '5'
      Port : '80'
      Protocol : HTTP
      VpcId: !Ref BankVPC

  # ALB Listener
  BankALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref BankALBTargetGroup
      LoadBalancerArn: !Ref BankApplicationLoadBalancer
      Port: 80
      Protocol: HTTP